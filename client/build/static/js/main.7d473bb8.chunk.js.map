{"version":3,"sources":["components/Statusbtn.js","components/PostStatus.js","components/StatusLogs.js","components/ProjectCard.js","components/ProjectsList.js","components/Logout.js","views/IndexView.js","views/CreateView.js","views/LoginView.js","views/TestView.js","views/EditView.js","components/Menu.js","components/Drawer.js","views/ProfileView.js","components/OnlineUsers.js","components/FileUpload.js","components/InstantMessenger.js","components/UploadedFilesList.js","views/ChatView.js","App.js","serviceWorker.js","index.js"],"names":["StatusButton","props","setReset","project","nextStatus","nextStat","status","classes","makeStyles","theme","button","margin","spacing","width","backgroundColor","color","useStyles","react_default","a","createElement","Button","variant","onClick","e","update","Object","objectSpread","Axios","put","_id","withCredentials","then","response","console","log","reset","catch","err","className","newStat","root","& > *","alignItems","StatusLogs","maxWidth","palette","background","paper","inline","display","logs","List","map","Fragment","ListItem","key","name","ListItemAvatar","Avatar","alt","src","ListItemText","primary","secondary","Typography","component","date","message","Divider","noValidate","autoComplete","TextField","id","label","IconButton","style","aria-label","event","Send_default","ProjectCard","_useState","useState","_useState2","slicedToArray","expanded","setExpanded","user","JSON","parse","sessionStorage","getItem","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","red","cardHeader","paddingLeft","cardDescription","paddingBottom","Card","CardHeader","title","subheader","updatedAt","action","MoreVert_default","url","navigate","CardContent","lead","startDate","deadline","description","CardActions","disableSpacing","Statusbtn","type","fullWidth","submit","userName","clsx","defineProperty","aria-expanded","ExpandMore_default","Collapse","in","timeout","unmountOnExit","paragraph","components_StatusLogs","statusLogs","ProjectList","flexWrap","justifyContent","overflow","gridList","header","icon","GridList","cellHeight","GridListTile","cols","ListSubheader","projects","rows","margin-bottom","components_ProjectCard","LogoutButton","axios","delete","flexGrow","min-height","padding","textAlign","text","heading","IndexView","useEffect","window","scrollTo","Grid","container","item","xs","md","ProjectsList","filter","CreateView","setError","_useState3","_useState4","setProject","onChangeHandler","target","value","main","marginTop","borderRadius","flexDirection","form","card","Container","CssBaseline","AddToPhotos_default","onSubmit","preventDefault","post","data","errmsg","sm","required","autoFocus","onChange","InputLabelProps","shrink","multiline","image","backgroundImage","backgroundRepeat","grey","backgroundSize","backgroundPosition","Login","firstName","setFname","lastName","setLname","_useState5","_useState6","setUserName","_useState7","_useState8","email","setEmail","_useState9","_useState10","password","setPassword","_useState11","_useState12","confirmPassword","setPasswordConf","_useState13","setUser","_useState14","setErr","_useState15","_useState16","toggle","setToggle","Paper","elevation","square","setItem","stringify","Link","href","Box","mt","obj","errors","keyPattern","errorHandler","TestView","setProjects","get","EditView","save","appBar","easing","sharp","leavingScreen","appBarShift","concat","easeOut","enteringScreen","menuButton","marginRight","hide","drawer","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","content","minHeight","contentShift","icons","DrawerMenu","useTheme","_React$useState","React","_React$useState2","open","setOpen","AppBar","position","Toolbar","edge","Menu_default","noWrap","Drawer","anchor","direction","ChevronLeft_default","ChevronRight_default","ListItemIcon","Dashboard_default","es","to","AddBox_default","AccountBox_default","ExitToApp_default","children","list","fullList","ProfileView","error","length","UsersGridList","users","lib_default","chat","input","modalPaper","boxShadow","shadows","top","left","submitbtn","cancelbtn","UploadButtons","file","setFile","fileName","setFileName","setUploadedFile","onSubmitHandler","_ref","asyncToGenerator","regenerator_default","mark","_callee","formData","res","_res$data","_fileName","filePath","wrap","_context","prev","next","FormData","append","headers","Content-Type","sent","t0","msg","stop","_x","apply","this","arguments","uploadClose","accept","multiple","files","htmlFor","AttachFile_default","Modal","onClose","aria-labelledby","aria-describedby","fab","absolute","bottom","right","messagebox","chatContainer","inputBox","inputPaper","Imessenger","messages","setMessage","sendMessage","justify","onKeyDown","keyCode","FilesGridList","socket","messenger","ChatView","setName","setRoom","onlineUsers","setOnlineUsers","setMessages","room","io","emit","disconnect","on","msgs","toConsumableArray","roomData","App","path","components_Menu","views_IndexView","views_CreateView","views_EditView","views_ProfileView","views_TestView","Boolean","location","hostname","match","ReactDOM","render","StrictMode","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7d473bb8.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport Axios from 'axios';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Icon from '@material-ui/core/Icon';\n\n\n\nconst StatusButton = props => {\n    const {setReset, project} = props;\n    const nextStatus = props.nextStat.status\n    const onClickHandler = e => {\n        let update = {\n            ...project,\n            'status':nextStatus\n        }\n        Axios.put(\"http://localhost:8000/api/project/\" + project._id, update, {withCredentials:true})\n        .then(response => {\n            console.log(response);\n            setReset((reset)=>{return(!reset)})\n        })\n        .catch(err => {\n            console.log(err);\n        })\n    }\n    const useStyles = makeStyles((theme) => ({\n        button: {\n            margin: theme.spacing(1),\n            width: '190px',\n            backgroundColor:props.nextStat.color\n        },\n    }));\n    const classes = useStyles();  \n    return (\n        <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={onClickHandler}\n            className={classes.button}\n        >{props.nextStat.newStat}</Button>\n    )\n}\n\nexport default StatusButton;\n\n// g5RV@E#rnnbg6-bB","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {TextField, IconButton} from '@material-ui/core';\nimport SendIcon from '@material-ui/icons/Send';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        '& > *': {\n        margin: theme.spacing(1),\n        width: '25ch',\n        alignItems:\"flex-start\"\n        },\n    },\n}));\n\nexport default function PostStatus() {\n    const classes = useStyles();\n    const handleClick = event => {\n    \n    }\n\nreturn (\n    <form className={classes.root} noValidate autoComplete=\"off\">\n        <ListItemAvatar>\n            <Avatar alt=\"Cindy Baker\" src=\"/static/images/avatar/3.jpg\" />\n            </ListItemAvatar>\n        <TextField \n            id=\"standard-basic\" \n            label=\"Post Status\" \n        />\n        <IconButton \n            style={{width:'50px'}}\n            aria-label=\"send\"\n            onClick={handleClick}\n        >\n            <SendIcon />\n        </IconButton >\n    </form>\n    );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ListItem from '@material-ui/core/ListItem';\nimport {List, TextField, Divider, IconButton, Avatar, ListItemAvatar, Typography, ListItemText} from '@material-ui/core';\nimport SendIcon from '@material-ui/icons/Send';\nimport PostStatus from '../components/PostStatus';\n\n\nconst StatusLogs = (props) => {\n    const useStyles = makeStyles((theme) => ({\n        root: {\n            width: '100%',\n            maxWidth: '36ch',\n            backgroundColor: theme.palette.background.paper,\n        },\n        inline: {\n            display: 'inline',\n        },\n        }));\n    const classes = useStyles();\n    const logs = props.logs\n    const handleClick = event => {\n    \n    }\n\n    return (\n        <List className={classes.root}>\n        {logs.map((log) => (\n            <>\n                <ListItem key={log.name} alignItems=\"flex-start\">\n                    <ListItemAvatar>\n                    <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" />\n                    </ListItemAvatar>\n                    <ListItemText\n                    primary={log.name}\n                    secondary={\n                        <React.Fragment>\n                        <Typography\n                            component=\"span\"\n                            variant=\"body2\"\n                            className={classes.inline}\n                            color=\"textPrimary\"\n                        >\n                            {log.date}\n                        </Typography>\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                            {log.message}\n                        </Typography>\n                        </React.Fragment>\n                    }\n                    />\n                </ListItem>\n                <Divider variant=\"inset\" component=\"li\" />\n            </>\n        ))}\n        <form noValidate  autoComplete=\"off\">\n            <ListItem alignItems=\"flex-start\">\n                <ListItemAvatar >\n                    <Avatar alt=\"Cindy Baker\" src=\"/static/images/avatar/3.jpg\" />\n                </ListItemAvatar>\n                <TextField \n                    id=\"standard-basic\" \n                    label=\"Post Status\" \n                />\n                <IconButton \n                    style={{width:'50px'}}\n                    aria-label=\"send\"\n                    onClick={handleClick}\n                >\n                    <SendIcon />\n                </IconButton >\n            </ListItem>\n        </form>\n        </List>\n    );\n}\n\nexport default StatusLogs;","import React, {useState, useEffect} from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Card, Button, CardHeader, CardContent, CardActions, Collapse, Avatar, IconButton, Typography} from '@material-ui/core';\nimport { red } from '@material-ui/core/colors';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport StatusBtn from '../components/Statusbtn';\nimport StatusLogs from '../components/StatusLogs';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport {navigate} from '@reach/router';\n\nconst ProjectCard = props => {\n    const {setReset}= props;\n    const [expanded, setExpanded] = useState(false);\n    const project = props.project\n    const user = JSON.parse(sessionStorage.getItem('user'))\n\n    const nextStat = (status) => {\n        if(status=='1'){\n            return({\n                color:'#FFBA00',\n                status:'2',\n                newStat:'Start'\n            })\n        }\n        else if(status=='2'){\n            return({\n                color:'#0000FF',\n                status:'3',\n                newStat:'Review'\n            })\n        }\n        else if(status=='3'){\n            return({\n                color:'#008000',\n                status:'4',\n                newStat:'Complete'\n            })\n        }\n        else if(status=='4'){\n            return({\n                color:'gray',\n                status:'4',\n                newStat:'Done'\n            })\n        }\n    }\n\n    const useStyles = makeStyles((theme) => ({\n        root: {\n            maxWidth: '100%',\n        },\n        media: {\n            height: 0,\n            paddingTop: '56.25%', // 16:9\n        },\n        expand: {\n            transform: 'rotate(0deg)',\n            marginLeft: 'auto',\n            transition: theme.transitions.create('transform', {\n            duration: theme.transitions.duration.shortest,\n            }),\n        },\n        expandOpen: {\n            transform: 'rotate(180deg)',\n        },\n        avatar: {\n            backgroundColor: red[500],\n        },\n        cardHeader:{\n            paddingLeft:'32px'\n        },\n        cardDescription:{\n            paddingLeft:'32px',\n            paddingTop:'0px',\n            paddingBottom:'0px'\n        }\n        }));\n\n    const classes = useStyles();\n    const handleExpandClick = () => {\n        setExpanded(!expanded);\n    };\n    \n    return(\n        <Card className={classes.root}>\n        <CardHeader\n            className={classes.cardHeader}\n            alignItems=\"flex-start\"\n            avatar={\n            <Avatar aria-label=\"recipe\" className={classes.avatar}>\n                R\n            </Avatar>\n            }\n            title={project.name}\n            subheader= {\"Updated : \" + project.updatedAt}\n            action={\n                <IconButton aria-label=\"settings\">\n                    <MoreVertIcon onClick={()=>{ let url= 'edit/'+project._id; return(navigate(url))}}/>\n                </IconButton>\n            }\n        />\n        <CardContent className={classes.cardDescription}>\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                Project Lead : {project.lead}\n            </Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                Start Date : {project.startDate}\n            </Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                Deadline : {project.deadline}\n            </Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                {project.description} \n            </Typography>\n        </CardContent>\n        <CardActions disableSpacing>\n            <StatusBtn\n                nextStat={nextStat(project.status)}\n                project={project}\n                setReset={setReset}\n            />\n            <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.submit}\n                onClick={()=>{let url='/chat/'+user.userName+'/channel/'+project.name; navigate(url)}}\n            >\n                Join\n            </Button>\n            <IconButton\n            className={clsx(classes.expand, {\n                [classes.expandOpen]: expanded,\n            })}\n            onClick={handleExpandClick}\n            aria-expanded={expanded}\n            aria-label=\"show more\"\n            >\n            <ExpandMoreIcon />\n            </IconButton>\n        </CardActions>\n        <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n            <CardContent>\n            <Typography style={{paddingLeft:'18px'}} paragraph>Status Logs:</Typography>\n                <StatusLogs \n                    logs={project.statusLogs}\n                />\n            </CardContent>\n        </Collapse>\n        </Card>\n    )\n}\nexport default ProjectCard;","import React, {useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport ProjectCard from '../components/ProjectCard';\n\n\n\n\nconst ProjectList = props => {\n    const {setReset}=props;\n    const[status, setStatus]=useState('loading');\n    const useStyles = makeStyles((theme) => ({\n        root: {\n            display: 'flex',\n            flexWrap: 'wrap',\n            justifyContent: 'space-around',\n            overflow: 'hidden',\n            backgroundColor: theme.palette.background.paper,\n        },\n        gridList: {\n            width: '100%',\n            backgroundColor:'black'\n        },\n    \n        header: {\n            backgroundColor: props.color,\n            color:'white'\n        },\n    \n        icon: {\n            color: 'rgba(255, 255, 255, 0.54)',\n        },\n    }));\n\n    const classes = useStyles();\n    return (\n        <div className={classes.root}>\n        <GridList cellHeight={'auto'} spacing={4} className={classes.gridList}>\n            <GridListTile key=\"Subheader\" cols={2} style={{ height: '80px' }}>\n                <ListSubheader className={classes.header} component=\"div\">{props.status}</ListSubheader>\n            </GridListTile>\n            {props.projects.map((project) => (\n            <GridListTile key={project.status} cols={2} rows={1.5} style={{'margin-bottom':'30px'}}>\n                <ProjectCard project={project} setReset={setReset}/>\n            </GridListTile>\n            ))}\n        </GridList>\n        </div>\n    );\n    }\n\n    export default ProjectList;","import React from 'react'\nimport axios from 'axios'\nimport {navigate} from '@reach/router';\n\nexport default function LogoutButton(){\n    function handleClick(){\n        axios.delete('http://localhost:8000/api/users/logout', { withCredentials: true})\n        .then(()=>navigate('/login'))\n    }\n    return(\n        <button onClick={handleClick}>Log Out</button>\n    )\n}\n","import React, {useState, useEffect, Component} from 'react';\nimport {Link} from '@reach/router';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {Paper, Grid} from '@material-ui/core';\n\nimport ProjectCard from '../components/ProjectCard';\nimport ProjectsList from '../components/ProjectsList';\nimport StatusBtn from '../components/Statusbtn';\nimport Logoutbtn from '../components/Logout';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        backgroundColor : 'black',\n        'min-height':'90vh',\n        padding:'40px'\n        },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n        },\n    heading: {\n        color: 'white'\n    }\n}));\n\nconst IndexView = props => {\n    const classes = useStyles();\n    const {setReset, projects}= props;\n    useEffect(()=>{\n        window.scrollTo(0, 0)\n    })\n\n    return(\n        <div className={classes.root}>\n        <Grid container spacing={3} >\n            <Grid item xs={12} md={3}>\n                <ProjectsList\n                    setReset={setReset} \n                    status={'Backlog'} \n                    color={'red'} \n                    projects={projects.filter(project => project.status=='1')}\n                />\n            </Grid>\n            <Grid item xs={12} md={3}>\n                <ProjectsList\n                    setReset={setReset} \n                    status={'In Progress'} \n                    color={'#FFBA00'}\n                    projects={projects.filter(project => project.status=='2')}\n                />\n            </Grid>\n            <Grid item xs={12} md={3}>\n                <ProjectsList\n                    setReset={setReset} \n                    status={'In Review'} \n                    color={'blue'}\n                    projects={projects.filter(project => project.status=='3')}\n                />\n            </Grid>\n            <Grid item xs={12} md={3}>\n                <ProjectsList \n                    setReset={setReset}\n                    status={'Completed'} \n                    color={'green'}\n                    projects={projects.filter(project => project.status=='4')}\n                />\n            </Grid>\n        </Grid>\n        </div>\n    )\n}\n\nexport default IndexView;","import React, {useState} from 'react';\nimport axios from 'axios';\nimport {navigate} from '@reach/router';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport AddToPhotosIcon from '@material-ui/icons/AddToPhotos';\nimport Grid from '@material-ui/core/Grid';\n\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\n\nconst CreateView = props => {\n    const {setReset}=props;\n    const [error, setError] = useState(\"\");\n    const [project, setProject] = useState(\n        {\n            \"name\": \"\",\n            \"lead\": \"\",\n            \"startDate\":\"\",\n            \"deadline\":\"\",\n            \"description\":\"\",\n            \"status\":\"1\"\n        }\n    )\n    const onChangeHandler = (e) => {\n        setProject({\n            ...project,\n            [e.target.name]:e.target.value\n        \n        })\n    }\n\n\n    const onSubmitHandler = (e) =>{\n        e.preventDefault();\n        axios.post(\"http://localhost:8000/api/project\", project, {withCredentials:true})\n        .then(response=>{\n            navigate('/');\n            setReset((reset)=>{return(!reset)});\n            console.log(response.data)\n        })\n        .catch(err =>{\n            console.log(err);\n            setError(err.response.data.errmsg);\n        })\n    }\n    const useStyles = makeStyles((theme) => ({\n        main:{\n            backgroundColor:'white',\n            marginTop:'50px',\n            padding:'0px',\n            borderRadius:'50px'\n        },\n        paper: {\n            marginTop: theme.spacing(8),\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n        },\n        avatar: {\n            margin: theme.spacing(1),\n            backgroundColor: theme.palette.secondary.main,\n        },\n        form: {\n            width: '100%', // Fix IE 11 issue.\n            marginTop: theme.spacing(3),\n        },\n        submit: {\n            margin: theme.spacing(3, 0, 2),\n            backgroundColor:'red',\n            color:'white'\n        },\n        card:{\n            width:'100%'\n        }\n    }));\n    const classes = useStyles();\n\n    return (\n        <Container className={classes.main} component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Card\n            className={classes.card}\n        >\n        <CardHeader\n            avatar={\n                <AddToPhotosIcon/>\n            }\n            title={\n                <Typography component=\"h1\" variant=\"h5\">\n                    Create a new project\n                </Typography>\n                }\n        >\n        </CardHeader>\n        <CardContent>\n            <form className={classes.form} noValidate onSubmit={onSubmitHandler}>\n                <Grid container spacing={2}>\n                <Grid item xs={12} sm={12}>\n                    <TextField\n                    name=\"name\"\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    label=\"Project Name\"\n                    autoFocus\n                    onChange={onChangeHandler}\n                    />\n                </Grid>\n                <Grid item xs={12} sm={8}>\n                    <TextField\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    label=\"Project Lead\"\n                    name=\"lead\"\n                    onChange={onChangeHandler}\n                    />\n                </Grid>\n                <Grid item xs={6}>\n                    <TextField\n                    label=\"Start Date\"\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    name=\"startDate\"\n                    type=\"date\"\n                    onChange={onChangeHandler}\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                    />\n                </Grid>\n                <Grid item xs={6}>\n                    <TextField\n                    label=\"Set a deadline\"\n                    name=\"deadline\"\n                    variant=\"outlined\"\n                    type=\"date\"\n                    required\n                    fullWidth\n                    onChange={onChangeHandler}\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                <TextField\n                    label=\"Project Description\"\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    multiline\n                    rows={5}\n                    name=\"description\"\n                    onChange={onChangeHandler}\n                    />\n                </Grid>\n                </Grid>\n                <Button\n                    type=\"submit\"\n                    fullWidth\n                    variant=\"contained\"\n                    className={classes.submit}\n                >\n                Add Project\n                </Button>\n            </form>\n        </CardContent>\n        </Card>\n    </Container>\n    );\n}\n\nexport default CreateView;\n\n{/* <div>\n                            <TextField required id=\"standard-required\" onChange={e=>{setName(e.target.value)}} label=\" Project Name\" />\n                        </div>\n                        <div>\n                            <TextField required id=\"standard-required\" onChange={e=>{setLead(e.target.value)}} label=\"Project Lead\" />\n                        </div>\n                        <div>\n                            <TextField required id=\"standard-required\" onChange={e=>{setStartDate(e.target.value)}} label=\"Start Date\" />\n                        </div>\n                        <div>\n                            <TextField required id=\"standard-required\" onChange={e=>{setDeadline(e.target.value)}} label=\"Deadline\" />\n                        </div>\n                        <div>\n                            <TextField required id=\"standard-required\" onChange={e=>{setDescription(e.target.value)}} label=\"Description\" /> */}","import React, {useState} from 'react';\nimport axios from 'axios';\nimport { navigate } from '@reach/router';\nimport RegistrationForm from '../components/RegistrationForm';\nimport {Box, TextField, Button, Paper, Grid, Link, Checkbox, FormControlLabel, CssBaseline, Avatar, Typography} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      height: '100vh',\n    },\n    image: {\n      backgroundImage: 'url(https://source.unsplash.com/Zsqbptb_j-Y)',\n      backgroundRepeat: 'no-repeat',\n      backgroundColor:\n        theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\n      backgroundSize: 'cover',\n      backgroundPosition: 'center',\n    },\n    paper: {\n      margin: theme.spacing(8, 4),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n    },\n    avatar: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n      width: '100%', // Fix IE 11 issue.\n      marginTop: theme.spacing(1),\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2),\n    },\n  }));\n\n\nexport default function Login(props){\n  const [firstName, setFname]=useState(\"\");\n  const [lastName, setLname]=useState(\"\");\n  const [userName, setUserName]= useState('');\n  const [email, setEmail]=useState(\"\");\n  const [password, setPassword]= useState(\"\");\n  const [confirmPassword, setPasswordConf]= useState(\"\");\n  const {setReset, setUser} = props;\n  const [err, setErr] = useState('');\n  const [toggle, setToggle]=useState(true);\n\n  function errorHandler(obj){\n    if(obj.errors){\n      if('password' in obj.errors){\n        return(obj.errors.password.message)\n      }else if('confirmPassword' in obj.errors){\n        return(obj.errors.confirmPassword.message)\n      }else if('email' in obj.errors){\n        return(obj.errors.email.message)\n      }else if('firstName' in obj.errors){\n        return(obj.errors.firstName.message)\n      }else if('lastName' in obj.errors){\n        return(obj.errors.lastName.message)\n      }else if('userName' in obj.errors){\n        return(obj.errors.userName.message)\n      }\n    }else if(obj.keyPattern){\n      if('email' in obj.keyPattern){\n        return('This email is already registered')\n      }else if('userName' in obj.keyPattern){\n        return('This username is already registered')\n      }\n    }\n  }\n  \n  \n  function handleLogin(event){\n      event.preventDefault();\n      setErr('')\n      axios.post('http://localhost:8000/api/users/login', {\n          email,\n          password\n      }, { withCredentials:true })\n      .then((response)=>{\n        sessionStorage.setItem(\"user\", JSON.stringify(response.data))\n        setReset((reset)=>{return(!reset)})\n        navigate('/')\n      })\n      .catch(()=>setErr('Please check your credentials !'));\n  }\n\n  function handleRegister(event){\n    event.preventDefault();\n    setErr('')\n    axios.post('http://localhost:8000/api/users', {\n      email, \n      password, \n      confirmPassword, \n      firstName, \n      lastName,\n      userName\n    }, {withCredentials:true})\n    .then((response)=>{\n      sessionStorage.setItem(\"user\", JSON.stringify(response.data))\n      setReset((reset)=>{return(!reset)})\n      navigate('/')\n    })\n    .catch(err => {\n      setErr(()=>errorHandler(err.response.data))\n    }); \n  }\n    const classes = useStyles();\n\n    return (\n      <div className={classes.root}>\n        <Grid container component=\"main\" className={classes.root}>\n        <CssBaseline />\n        <Grid item xs={false} sm={4} md={7} className={classes.image} />\n        <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n          <div className={classes.paper}>\n            <Typography component=\"h1\" variant=\"h5\">\n              {toggle?\"Sign in\":\"Create a Profile\"}\n            </Typography>\n          {\n              err && (\n                  <p style={{color:'red'}}>{err}</p>\n              )\n          }\n          {\n            toggle?\n              <form onSubmit={handleLogin} className={classes.form} noValidate>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                    Please sign up for an account if you dont have one already. Having a unique username is essential to utilize the chat features of this application. \n                </Typography>\n                {/* <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                    email: subi@gmail.com\n                </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                    password: 1234567890 \n                </Typography> */}\n                <TextField\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    id=\"email\"\n                    label=\"Email Address\"\n                    name=\"email\"\n                    autoComplete=\"email\"\n                    autoFocus\n                    value={email}\n                    onChange={e => setEmail(e.target.value)}\n                />\n                <TextField\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    name=\"password\"\n                    label=\"Password\"\n                    type=\"password\"\n                    id=\"password\"\n                    autoComplete=\"current-password\"\n                    value={password}\n                    onChange={e => setPassword(e.target.value)}\n                />\n                <Button\n                    type=\"submit\"\n                    fullWidth\n                    variant=\"contained\"\n                    color=\"primary\"\n                    className={classes.submit}\n                >\n                Sign In\n                </Button>\n                <Grid container>\n                <Grid item xs>\n                    <Link href=\"#\" variant=\"body2\">\n                    Forgot password?\n                    </Link>\n                </Grid>\n                <Grid item>\n                    <Link onClick={(e)=>{e.preventDefault();setToggle((toggle)=>{return(!toggle)})}} href=\"#\" variant=\"body2\">\n                    {\"Don't have an account? Sign Up\"}\n                    </Link>\n                </Grid>\n                </Grid>\n                <Box mt={5}>\n                </Box>\n            </form>:\n            <form onSubmit={handleRegister} className={classes.form} noValidate>\n              <Grid container>\n                <Grid item xs={12}>\n                  <TextField\n                      variant=\"outlined\"\n                      margin=\"normal\"\n                      required\n                      fullWidth\n                      id=\"email\"\n                      label=\"First Name\"\n                      name=\"fname\"\n                      autoFocus\n                      value={firstName}\n                      onChange={e => setFname(e.target.value)}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                      variant=\"outlined\"\n                      margin=\"normal\"\n                      required\n                      fullWidth\n                      label=\"Last Name\"\n                      name=\"fname\"\n                      autoFocus\n                      value={lastName}\n                      onChange={e => setLname(e.target.value)}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                      variant=\"outlined\"\n                      margin=\"normal\"\n                      required\n                      fullWidth\n                      label=\"Username\"\n                      name=\"userName\"\n                      autoFocus\n                      value={userName}\n                      onChange={e => setUserName(e.target.value)}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                      variant=\"outlined\"\n                      margin=\"normal\"\n                      required\n                      fullWidth\n                      id=\"email\"\n                      label=\"Email Address\"\n                      name=\"email\"\n                      autoComplete=\"email\"\n                      autoFocus\n                      value={email}\n                      onChange={e => setEmail(e.target.value)}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                      variant=\"outlined\"\n                      margin=\"normal\"\n                      required\n                      fullWidth\n                      name=\"password\"\n                      label=\"Password\"\n                      type=\"password\"\n                      id=\"password\"\n                      autoComplete=\"current-password\"\n                      value={password}\n                      onChange={e => setPassword(e.target.value)}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                      variant=\"outlined\"\n                      margin=\"normal\"\n                      required\n                      fullWidth\n                      label=\"Confirm Password\"\n                      type=\"password\"\n                      value={confirmPassword}\n                      onChange={e => setPasswordConf(e.target.value)}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <Button\n                    type=\"submit\"\n                    fullWidth\n                    variant=\"contained\"\n                    color=\"primary\"\n                    className={classes.submit}\n                  >\n                  Register\n                  </Button>\n                </Grid>\n              </Grid>\n            <Grid container>\n            <Grid item xs>\n              <Link href=\"#\" variant=\"body2\">\n              Forgot password?\n              </Link>\n            </Grid>\n            <Grid item>\n              <Link onClick={(e)=>{e.preventDefault();setToggle((toggle)=>{return(!toggle)})}} href=\"#\" variant=\"body2\">\n              {\"Login\"}\n              </Link>\n            </Grid>\n            </Grid>\n            <Box mt={5}>\n            </Box>\n          </form>\n            }\n            </div>\n        </Grid>\n        </Grid>\n      </div>\n      );\n}\n\n","import React, {useState, useEffect, Component} from 'react';\nimport {Link} from '@reach/router';\nimport axios from 'axios';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {Paper, Grid} from '@material-ui/core';\n\nimport ProjectCard from '../components/ProjectCard';\nimport ProjectsList from '../components/ProjectsList';\nimport StatusBtn from '../components/Statusbtn';\nimport Logoutbtn from '../components/Logout';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        backgroundColor : 'black',\n        'min-height':'100vh',\n        padding:'40px'\n        },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n        },\n    heading: {\n        color: 'white'\n    }\n}));\n\nconst TestView = props => {\n    const[projects, setProjects]=useState([]);\n    const[reset, setReset]=useState(false)\n    const classes = useStyles();\n\n    useEffect(()=>{\n        axios.get('http://localhost:8000/api/projects')\n        .then((response)=>{\n            setProjects(response.data)\n        })\n        .catch(err=>{\n            console.log(err);\n        })\n    },[reset])\n\n    const sortByStatus = (status, projects) => {\n        return(\n            projects.filter(project => project.status==status)\n        )\n    }\n\n    return(\n        <div className={classes.root}>\n        <Grid container spacing={3} >\n            <Grid item xs={12} md={3}>\n                <ProjectsList \n                    status={'Backlog'} \n                    color={'red'} \n                    projects={projects.filter(project => project.status=='1')}\n                />\n            </Grid>\n            <Grid item xs={12} md={3}>\n                <ProjectsList \n                    status={'In Progress'} \n                    color={'#FFBA00'}\n                    projects={projects.filter(project => project.status=='2')}\n                />\n            </Grid>\n            <Grid item xs={12} md={3}>\n                <ProjectsList \n                    status={'In Review'} \n                    color={'blue'}\n                    projects={projects.filter(project => project.status=='3')}\n                />\n            </Grid>\n            <Grid item xs={12} md={3}>\n                <ProjectsList \n                    status={'Completed'} \n                    color={'green'}\n                    projects={projects.filter(project => project.status=='4')}\n                />\n            </Grid>\n        </Grid>\n        </div>\n    )\n}\n\nexport default TestView;","import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport {navigate} from '@reach/router';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport AddToPhotosIcon from '@material-ui/icons/AddToPhotos';\nimport Grid from '@material-ui/core/Grid';\n\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\n\nconst EditView = props => {\n    const {setReset, id}=props;\n    const [error, setError] = useState(\"\");\n    const [project, setProject] = useState(\n        {\n            \"name\": \"\",\n            \"lead\": \"\",\n            \"startDate\":\"\",\n            \"deadline\":\"\",\n            \"description\":\"\",\n            \"status\":\"1\"\n        })\n\n        useEffect(()=>{\n            axios.get('http://localhost:8000/api/project/'+id)\n            .then((response)=>{\n                setProject(response.data)\n            })\n            .catch(err=>{\n                console.log(err);\n            })\n        },[])\n\n        const onChangeHandler = (e) => {\n        setProject({\n            ...project,\n            [e.target.name]:e.target.value\n        \n        })\n    }\n\n\n    const saveHandler = (e) =>{\n        e.preventDefault();\n        axios.put(\"http://localhost:8000/api/project/\"+id, project, {withCredentials:true})\n        .then(response=>{\n            navigate('/');\n            setReset((reset)=>{return(!reset)});\n            console.log(response.data)\n        })\n        .catch(err =>{\n            console.log(err);\n            if(err.response.data.message==\"Unauthorized\"){\n                navigate('/login')\n            }\n            setError(err.response.data.errmsg);\n        })\n    }\n\n    const deleteHandler = (e) =>{\n        e.preventDefault();\n        axios.delete(\"http://localhost:8000/api/project/\"+id, {withCredentials:true})\n        .then(response=>{\n            navigate('/');\n            setReset((reset)=>{return(!reset)});\n            console.log(response.data)\n        })\n        .catch(err =>{\n            console.log(err);\n            if(err.response.data.message==\"Unauthorized\"){\n                navigate('/login')\n            }\n            setError(err.response.data.errmsg);\n        })\n    }\n\n\n\n    const useStyles = makeStyles((theme) => ({\n        main:{\n            backgroundColor:'white',\n            marginTop:'50px',\n            padding:'0px',\n            borderRadius:'50px'\n        },\n        paper: {\n            marginTop: theme.spacing(8),\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n        },\n        avatar: {\n            margin: theme.spacing(1),\n            backgroundColor: theme.palette.secondary.main,\n        },\n        form: {\n            width: '100%', // Fix IE 11 issue.\n            marginTop: theme.spacing(3),\n        },\n        save: {\n            margin: theme.spacing(3, 0, 2),\n        },\n        delete:{\n            margin: theme.spacing(3, 0, 2),\n            marginLeft:'15px',\n            backgroundColor:'red',\n            color:'white'\n        },\n        card:{\n            width:'100%',\n        }\n    }));\n    const classes = useStyles();\n\n    return (\n        <Container className={classes.main} component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Card\n            className={classes.card}\n        >\n        <CardHeader\n            avatar={\n                <AddToPhotosIcon/>\n            }\n            title={\n                <Typography component=\"h1\" variant=\"h5\">\n                    Edit Project\n                </Typography>\n                }\n        >\n        </CardHeader>\n        <CardContent>\n            <form className={classes.form} noValidate onSubmit={saveHandler}>\n                <Grid container spacing={2}>\n                <Grid item xs={12} sm={12}>\n                    <TextField\n                    name=\"name\"\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    label=\"Project Name\"\n                    autoFocus\n                    onChange={onChangeHandler}\n                    value={project.name}\n                    />\n                </Grid>\n                <Grid item xs={12} sm={8}>\n                    <TextField\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    label=\"Project Lead\"\n                    name=\"lead\"\n                    onChange={onChangeHandler}\n                    value={project.lead}\n                    />\n                </Grid>\n                <Grid item xs={6}>\n                    <TextField\n                    label=\"Start Date\"\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    name=\"startDate\"\n                    type=\"date\"\n                    value={project.startDate}\n                    onChange={onChangeHandler}\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                    />\n                </Grid>\n                <Grid item xs={6}>\n                    <TextField\n                    label=\"Set a deadline\"\n                    name=\"deadline\"\n                    variant=\"outlined\"\n                    type=\"date\"\n                    required\n                    fullWidth\n                    value={project.deadline}\n                    onChange={onChangeHandler}\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                <TextField\n                    label=\"Project Description\"\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    multiline\n                    rows={5}\n                    name=\"description\"\n                    value={project.description}\n                    onChange={onChangeHandler}\n                    />\n                </Grid>\n                </Grid>\n                <Button\n                    type=\"submit\"\n                    variant=\"contained\"\n                    className={classes.save}\n                >\n                save\n                </Button>\n                <Button\n                    type=\"submit\"\n                    variant=\"contained\"\n                    className={classes.delete}\n                    onClick={deleteHandler}\n                >\n                Delete\n                </Button>\n            </form>\n        </CardContent>\n        </Card>\n    </Container>\n    );\n}\n\nexport default EditView;","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport AddBoxIcon from '@material-ui/icons/AddBox';\nimport Logout from './Logout';\nimport AccountBoxIcon from '@material-ui/icons/AccountBox';\n\nimport {Link} from '@reach/router'\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n    appBar: {\n        backgroundColor:'black',\n        transition: theme.transitions.create(['margin', 'width'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        width: `calc(100% - ${drawerWidth}px)`,\n        marginLeft: drawerWidth,\n        transition: theme.transitions.create(['margin', 'width'], {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    hide: {\n        display: 'none',\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    drawerPaper: {\n        backgroundColor:'#404040',\n        width: drawerWidth,\n    },\n    drawerHeader: {\n        display: 'flex',\n        alignItems: 'center',\n        padding: theme.spacing(0, 1),\n        // necessary for content to be below app bar\n        ...theme.mixins.toolbar,\n        justifyContent: 'flex-end',\n    },\n    content: {\n        flexGrow: 1,\n        transition: theme.transitions.create('margin', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n        }),\n        marginLeft: -drawerWidth,\n        backgroundColor:'black',\n        minHeight:'100vh'\n    },\n    contentShift: {\n        transition: theme.transitions.create('margin', {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n        }),\n        marginLeft: 0,\n    },\n    icons:{\n        color:'white'\n    },\n    text:{\n        color:'white'\n    }\n}));\n\nconst DrawerMenu = (props) => {\n    const classes = useStyles();\n    const theme = useTheme();\n    const [open, setOpen] = React.useState(false);\n    const handleDrawerOpen = () => {\n        setOpen(true);\n    };\n    const handleDrawerClose = () => {\n        setOpen(false);\n    };\n    return (\n        <div className={classes.root}>\n        <CssBaseline />\n        <AppBar\n            position=\"fixed\"\n            className={clsx(classes.appBar, {\n            [classes.appBarShift]: open,\n            })}\n        >\n            <Toolbar>\n            <IconButton\n                color=\"inherit\"\n                aria-label=\"open drawer\"\n                onClick={handleDrawerOpen}\n                edge=\"start\"\n                className={clsx(classes.menuButton, open && classes.hide)}\n            >\n                <MenuIcon />\n            </IconButton>\n            <Typography variant=\"h6\" noWrap>\n                Project Wrapdrive\n            </Typography>\n            </Toolbar>\n        </AppBar>\n        <Drawer\n            className={classes.drawer}\n            variant=\"persistent\"\n            anchor=\"left\"\n            open={open}\n            classes={{\n            paper: classes.drawerPaper,\n            }}\n        >\n            <div className={classes.drawerHeader}>\n            <IconButton onClick={handleDrawerClose}>\n                {theme.direction === 'ltr' ? <ChevronLeftIcon style={{'color':'white'}}/> : <ChevronRightIcon style={{'color':'white'}} />}\n            </IconButton>\n            </div>\n            <Divider />\n            <List>\n                <ListItem button >\n                <ListItemIcon><DashboardIcon className={classes.icons} /></ListItemIcon>\n                    <Link to={'/'}>\n                        <ListItemText className={classes.text} primary={'Board'} />\n                    </Link>\n                </ListItem>\n                <ListItem button >\n                <ListItemIcon><AddBoxIcon className={classes.icons} /></ListItemIcon>\n                    <Link to={'/create'}>\n                        <ListItemText className={classes.text} primary={'Create'} />\n                    </Link>\n                </ListItem>\n            </List>\n            <Divider />\n            <List>\n                <ListItem button>\n                    <ListItemIcon><AccountBoxIcon className={classes.icons} /></ListItemIcon>\n                    <Link to={'/profile'}>\n                        <ListItemText className={classes.text} primary={'Profile'} />\n                    </Link>\n                </ListItem>\n                <ListItem button>\n                    <ListItemIcon><ExitToAppIcon className={classes.icons} /></ListItemIcon>\n                    <Logout/>\n                </ListItem>\n            </List>\n        </Drawer>\n        <main\n            className={clsx(classes.content, {\n                [classes.contentShift]: open,\n            })}\n        >\n            <div className={classes.drawerHeader} />\n            {props.children}\n        </main>\n        </div>\n    );\n}\n\nexport default DrawerMenu;","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\n\nconst useStyles = makeStyles({\n  list: {\n    width: 250,\n  },\n  fullList: {\n    width: 'auto',\n  },\n});\n\nexport default function TemporaryDrawer() {\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    top: false,\n    left: false,\n    bottom: false,\n    right: false,\n  });\n\n  const toggleDrawer = (anchor, open) => (event) => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    setState({ ...state, [anchor]: open });\n  };\n\n  const list = (anchor) => (\n    <div\n      className={clsx(classes.list, {\n        [classes.fullList]: anchor === 'top' || anchor === 'bottom',\n      })}\n      role=\"presentation\"\n      onClick={toggleDrawer(anchor, false)}\n      onKeyDown={toggleDrawer(anchor, false)}\n    >\n      <List>\n        {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\n          <ListItem button key={text}>\n            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n            <ListItemText primary={text} />\n          </ListItem>\n        ))}\n      </List>\n      <Divider />\n      <List>\n        {['All mail', 'Trash', 'Spam'].map((text, index) => (\n          <ListItem button key={text}>\n            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n            <ListItemText primary={text} />\n          </ListItem>\n        ))}\n      </List>\n    </div>\n  );\n\n  return (\n    <div>\n        <React.Fragment>\n          <Button onClick={toggleDrawer('left', true)}>click</Button>\n          <Drawer anchor={'left'} open={state['left']} onClose={toggleDrawer('left', false)}>\n            1\n            2\n            3\n            4\n            5\n            6\n          </Drawer>\n        </React.Fragment>\n      ))}\n    </div>\n  );\n}","import React, {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport {navigate} from '@reach/router';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport AddToPhotosIcon from '@material-ui/icons/AddToPhotos';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\n\r\nconst ProfileView = props => {\r\n    const {user, setUser, setReset}=props;\r\n    const [error, setError] = useState(\"\");\r\n    const onChangeHandler = (e) => {\r\n        setUser({\r\n            ...user,\r\n            [e.target.name]:e.target.value\r\n        \r\n        })\r\n    }\r\n    function errorHandler(obj){\r\n        if(obj.errors){\r\n            if('password' in obj.errors){\r\n                return(obj.errors.password.message)\r\n            }else if('confirmPassword' in obj.errors){\r\n                return(obj.errors.confirmPassword.message)\r\n            }else if('email' in obj.errors){\r\n                return(obj.errors.email.message)\r\n            }else if('firstName' in obj.errors){\r\n                return(obj.errors.firstName.message)\r\n            }else if('lastName' in obj.errors){\r\n                return(obj.errors.lastName.message)\r\n            }else if('userName' in obj.errors){\r\n                return(obj.errors.userName.message)\r\n            }\r\n            }else if(obj.keyPattern){\r\n            if('email' in obj.keyPattern){\r\n                return('This email is already registered')\r\n            }else if('userName' in obj.keyPattern){\r\n                return('This username is already registered')\r\n            }\r\n            }\r\n        }\r\n\r\n    const saveHandler = (e) =>{\r\n        e.preventDefault();\r\n        if(user.password.length<2){\r\n            setError('check your password')\r\n            return\r\n        } else if (user.password!=user.confirmPassword){\r\n            setError('passwords dont match')\r\n            return\r\n        }\r\n        axios.put(\"http://localhost:8000/api/user/\"+user.id, user, {withCredentials:true})\r\n        .then(response=>{\r\n            navigate('/');\r\n            setReset((reset)=>{return(!reset)});\r\n            console.log(response.data)\r\n        })\r\n        .catch(err =>{\r\n            console.log(err);\r\n            if(err.response.data.message==\"Unauthorized\"){\r\n                navigate('/login')\r\n            }\r\n            setError('wrong password');\r\n        })\r\n    }\r\n\r\n    // const deleteHandler = (e) =>{\r\n    //     e.preventDefault();\r\n    //     axios.delete(\"http://localhost:8000/api/project/\"+id, {withCredentials:true})\r\n    //     .then(response=>{\r\n    //         navigate('/');\r\n    //         setReset((reset)=>{return(!reset)});\r\n    //         console.log(response.data)\r\n    //     })\r\n    //     .catch(err =>{\r\n    //         console.log(err);\r\n    //         if(err.response.data.message==\"Unauthorized\"){\r\n    //             navigate('/login')\r\n    //         }\r\n    //         setError(err.response.data.errmsg);\r\n    //     })\r\n    // }\r\n\r\n\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        main:{\r\n            backgroundColor:'white',\r\n            marginTop:'50px',\r\n            padding:'0px',\r\n            borderRadius:'50px'\r\n        },\r\n        paper: {\r\n            marginTop: theme.spacing(8),\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n        },\r\n        avatar: {\r\n            margin: theme.spacing(1),\r\n            backgroundColor: theme.palette.secondary.main,\r\n        },\r\n        form: {\r\n            width: '100%', // Fix IE 11 issue.\r\n            marginTop: theme.spacing(3),\r\n        },\r\n        save: {\r\n            margin: theme.spacing(3, 0, 2),\r\n        },\r\n        delete:{\r\n            margin: theme.spacing(3, 0, 2),\r\n            marginLeft:'15px',\r\n            backgroundColor:'red',\r\n            color:'white'\r\n        },\r\n        card:{\r\n            width:'100%',\r\n        }\r\n    }));\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Container className={classes.main} component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <Card\r\n            className={classes.card}\r\n        >\r\n        <CardHeader\r\n            avatar={\r\n                <AddToPhotosIcon/>\r\n            }\r\n            title={\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Your profile\r\n                </Typography>\r\n                }\r\n        >\r\n        </CardHeader>\r\n        <CardContent>\r\n            {error}\r\n            <form className={classes.form} noValidate onSubmit={saveHandler}>\r\n                <Grid container spacing={2}>\r\n                <Grid item xs={12} sm={12}>\r\n                    <TextField\r\n                    name=\"firstName\"\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    label=\"First Name\"\r\n                    autoFocus\r\n                    value={user.firstName}\r\n                    onChange={onChangeHandler}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={12}>\r\n                    <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    label=\"Last Name\"\r\n                    name=\"lastName\"\r\n                    value={user.lastName}\r\n                    onChange={onChangeHandler}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <TextField\r\n                    label=\"Username\"\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"userName\"\r\n                    value={user.userName}\r\n                    onChange={onChangeHandler}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <TextField\r\n                    label=\"Email Address\"\r\n                    name=\"email\"\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    value={user.email}\r\n                    onChange={onChangeHandler}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <TextField\r\n                    label=\"Password\"\r\n                    name=\"password\"\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    type=\"password\"\r\n                    value={user.password}\r\n                    onChange={onChangeHandler}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <TextField\r\n                    label=\"Confirm Password\"\r\n                    name=\"confirmPassword\"\r\n                    variant=\"outlined\"\r\n                    type=\"password\"\r\n                    required\r\n                    fullWidth\r\n                    value={user.confirmPassword}\r\n                    onChange={onChangeHandler}\r\n                    />\r\n                </Grid>\r\n                </Grid>\r\n                <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    className={classes.save}\r\n                >\r\n                save changes\r\n                </Button>\r\n                <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    className={classes.delete}\r\n                >\r\n                Delete your profile\r\n                </Button>\r\n            </form>\r\n        </CardContent>\r\n        </Card>\r\n    </Container>\r\n    );\r\n}\r\n\r\nexport default ProfileView;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport ScrollToBottom from 'react-scroll-to-bottom'\r\nimport {Paper,ListSubheader, Icon, Grid, Modal, List, ListItem, Divider, ListItemText, ListItemAvatar, Card, CardContent, CardHeader, Button, Avatar, CssBaseline, TextField, Typography, Container } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    flexDirection: 'column',\r\n    overflow: 'hidden',\r\n    backgroundColor: theme.palette.background.paper,\r\n    height:'80vh'\r\n  },\r\n  gridList: {\r\n    width: 500,\r\n    height: 450,\r\n  },\r\n  status:{\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    backgroundColor:'#BDBDBD',\r\n    padding:'10px'\r\n  }\r\n}));\r\n\r\n/**\r\n * The example data is structured as follows:\r\n *\r\n * import image from 'path/to/image.jpg';\r\n * [etc...]\r\n *\r\n * const tileData = [\r\n *   {\r\n *     img: image,\r\n *     title: 'Image',\r\n *     author: 'author',\r\n *     cols: 2,\r\n *   },\r\n *   {\r\n *     [etc...]\r\n *   },\r\n * ];\r\n */\r\nexport default function UsersGridList(props) {\r\n  const {users}=props\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.status}>\r\n        <Typography>Online</Typography>\r\n      </div>\r\n      <List >\r\n        <ScrollToBottom className={classes.chat} >\r\n        {\r\n          users.map(user =>{\r\n            return(\r\n              <>\r\n              <ListItem key={user} alignItems=\"center\">\r\n                <ListItemAvatar>\r\n                <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" />\r\n                </ListItemAvatar>\r\n                <ListItemText\r\n                primary={user.name}\r\n                secondary={\r\n                  <React.Fragment>\r\n                  <Typography\r\n                    component=\"span\"\r\n                    variant=\"body2\"\r\n                    className={classes.inline}\r\n                    color=\"textPrimary\"\r\n                  >\r\n                    {/* {message.text} */}\r\n                  </Typography>\r\n                  </React.Fragment>\r\n                }\r\n                />\r\n              </ListItem>\r\n            </>\r\n            )\r\n          })\r\n        }\r\n        </ScrollToBottom>\r\n      </List>\r\n      {/* <GridList cellHeight={160} className={classes.gridList} cols={1}>\r\n        <p>Online</p>\r\n        {users.map((tile) => (\r\n          <GridListTile key={tile.img} cols={tile.cols || 1}>\r\n            <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" />\r\n          </GridListTile>\r\n        ))}\r\n      </GridList> */}\r\n    </div>\r\n  );\r\n}","import React, {useState} from 'react';\nimport axios from 'axios';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {Button, Modal, IconButton, Grid} from '@material-ui/core';\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        '& > *': {\n        margin: theme.spacing(1),\n        },\n    },\n    input: {\n        display: 'none',\n    },\n    modalPaper:{\n        position: 'absolute',\n        color:'white',\n        width: 400,\n        backgroundColor: '#404040',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n        top:'35%',\n        left:'39%'\n    },\n    submitbtn:{\n        margin:'20px'\n    },\n    cancelbtn:{\n        margin:'20px'\n    }\n    }));\n\n    export default function UploadButtons() {\n    const [open, setOpen] = useState(false);\n    const [file, setFile] = useState ('');\n    const [fileName, setFileName] = useState('Choose File');\n    const [uploadedFile, setUploadedFile] = useState({});\n\n    const onChangeHandler = e => {\n        setFile(e.target.files[0]);\n        setFileName(e.target.files[0].name);\n        setOpen(true);\n    }\n    const onSubmitHandler = async e =>{\n        e.preventDefault();\n        const formData = new FormData();\n        formData.append('file', file);\n        setOpen(false);\n\n        try{\n            const res = await axios.post('http://localhost:8000/api/upload', formData, {\n                headers:{\n                    'Content-Type': 'multipart/form-data'\n                }\n            });\n            const {fileName, filePath} = res.data;\n            setUploadedFile({fileName, filePath});\n        }catch(err){\n            if (err.response.status === 500){\n                console.log('There was a problem with the server')\n            } else {\n                console.log(err.response.data.msg)\n            }\n        }\n    }\n    \n    const uploadClose = () => {\n        setOpen(false);\n        setFile('');\n        setFileName('Choose File')\n    };\n    \n    const classes = useStyles();\n    return (\n        <div className={classes.root}>\n            <input\n                accept=\"image/*\"\n                className={classes.input}\n                id=\"contained-button-file\"\n                multiple\n                type=\"file\"\n                onChange={onChangeHandler}\n            />\n            <label htmlFor=\"contained-button-file\">\n            <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\">\n                <AttachFileIcon />\n            </IconButton>\n            </label>\n            <Modal\n                open={open}\n                onClose={uploadClose}\n                aria-labelledby=\"simple-modal-title\"\n                aria-describedby=\"simple-modal-description\"\n                >\n                <form onSubmit={onSubmitHandler}>\n                    <Grid container className={classes.modalPaper} spacing={4}>\n                        <Grid item xs={12}>\n                            <div>\n                            <h2 id=\"simple-modal-title\">{fileName}</h2>\n                            </div>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Button className={classes.cancelbtn} onClick={uploadClose} component=\"span\" color=\"secondary\">\n                                Cancel\n                            </Button>\n                            <Button className={classes.submitbtn} type=\"submit\" variant=\"contained\" color=\"primary\">\n                                Upload\n                            </Button>\n                        </Grid>\n                    </Grid>\n                </form>\n            </Modal> \n        </div>\n    );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AddIcon from '@material-ui/icons/Add';\nimport Fab from '@material-ui/core/Fab';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport {Paper, Icon, Grid, Modal, List, ListItem, Divider, ListItemText, ListItemAvatar, Card, CardContent, CardHeader, Button, Avatar, CssBaseline, TextField, Typography, Container } from '@material-ui/core'\nimport ScrollToBottom from 'react-scroll-to-bottom'\nimport FileUpload from '../components/FileUpload'\n\nconst useStyles = makeStyles((theme) => ({\n    fab: {\n        margin: theme.spacing(2),\n    },\n    absolute: {\n        position: 'absolute',\n        bottom: theme.spacing(2),\n        right: theme.spacing(3),\n    },\n    messagebox:{\n        width:'70%',\n        height:'100%'\n    },\n    chat:{\n        width: '100%',\n        backgroundColor: theme.palette.background.paper,\n        overflow: 'auto',\n        height: '310px',\n    },\n    chatContainer:{\n      \n    },\n    inputBox:{\n        width:'100%'\n    },\n    inputPaper:{\n        backgroundColor: '#BDBDBD',\n    },\n    input:{\n        backgroundColor:'white'\n    }\n    }));\n\n    export default function Imessenger(props) {\n        const {messages, message, setMessage, sendMessage}=props\n        const classes = useStyles();\n\n    return (\n        <div>\n                <Grid \n                    container \n                    direction=\"row\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                    \n                >\n                    <Grid item xs={12} >\n                        <Paper elevation={9} >\n                            <List >\n                                <ScrollToBottom className={classes.chat} >\n                                {\n                                    messages.map(message =>{\n                                        return(\n                                            <>\n                                            <ListItem key={message} alignItems=\"center\">\n                                                <ListItemAvatar>\n                                                <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" />\n                                                </ListItemAvatar>\n                                                <ListItemText\n                                                primary={message.user}\n                                                secondary={\n                                                    <React.Fragment>\n                                                    <Typography\n                                                        component=\"span\"\n                                                        variant=\"body2\"\n                                                        className={classes.inline}\n                                                        color=\"textPrimary\"\n                                                    >\n                                                        {message.text}\n                                                    </Typography>\n\n                                                    </React.Fragment>\n                                                }\n                                                />\n                                            </ListItem>\n                                            </>\n                                        )\n                                    })\n                                }\n                                </ScrollToBottom>\n                            </List>\n                        </Paper>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <Paper elevation={9} className={classes.inputPaper}>\n                            <Grid container className={classes.inputBox} spacing={2}>\n                                <Grid item xs={1}>\n                                    <FileUpload/>\n                                </Grid>\n                                <Grid item xs={11} >\n                                    <TextField\n                                        className={classes.input}\n                                        fullWidth\n                                        value={message}\n                                        variant=\"outlined\"\n                                        onChange={(e)=>setMessage(e.target.value)}\n                                        onKeyDown={(e)=>e.keyCode===13?sendMessage(e):null}\n                                    />\n                                </Grid>\n                            </Grid>\n                        </Paper>\n                    </Grid>\n                </Grid>\n        </div>\n    );\n    }","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport ScrollToBottom from 'react-scroll-to-bottom'\r\nimport {Paper,ListSubheader, Icon, Grid, Modal, List, ListItem, Divider, ListItemText, ListItemAvatar, Card, CardContent, CardHeader, Button, Avatar, CssBaseline, TextField, Typography, Container } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        flexDirection: 'column',\r\n        overflow: 'hidden',\r\n        backgroundColor: theme.palette.background.paper,\r\n        height:'80vh'\r\n    },\r\n    gridList: {\r\n        width: 500,\r\n        height: 450,\r\n    },\r\n    status:{\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        backgroundColor:'#BDBDBD',\r\n        padding:'10px'\r\n    }\r\n}));\r\n\r\n/**\r\n * The example data is structured as follows:\r\n *\r\n * import image from 'path/to/image.jpg';\r\n * [etc...]\r\n *\r\n * const tileData = [\r\n *   {\r\n *     img: image,\r\n *     title: 'Image',\r\n *     author: 'author',\r\n *     cols: 2,\r\n *   },\r\n *   {\r\n *     [etc...]\r\n *   },\r\n * ];\r\n */\r\nexport default function FilesGridList(props) {\r\n    const {files}=props\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n        <div className={classes.status}>\r\n            <Typography>Uploaded Files</Typography>\r\n        </div>\r\n        <List >\r\n            <ScrollToBottom className={classes.chat} >\r\n            {\r\n                files.map(file =>{\r\n                    return(\r\n                        <>\r\n                        <ListItem key={file} alignItems=\"center\">\r\n                            <ListItemAvatar>\r\n                            <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" />\r\n                            </ListItemAvatar>\r\n                            <ListItemText\r\n                            primary={file.name}\r\n                            secondary={\r\n                                <React.Fragment>\r\n                                <Typography\r\n                                    component=\"span\"\r\n                                    variant=\"body2\"\r\n                                    className={classes.inline}\r\n                                    color=\"textPrimary\"\r\n                                >\r\n                                    {/* {message.text} */}\r\n                                </Typography>\r\n                                </React.Fragment>\r\n                            }\r\n                            />\r\n                        </ListItem>\r\n                        </>\r\n                    )\r\n                })\r\n            }\r\n            </ScrollToBottom>\r\n        </List>\r\n        </div>\r\n    );\r\n}","import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport {navigate} from '@reach/router';\nimport AddToPhotosIcon from '@material-ui/icons/AddToPhotos';\nimport {Paper, Icon, Grid, Modal, List, ListItem, Divider, ListItemText, ListItemAvatar, Card, CardContent, CardHeader, Button, Avatar, CssBaseline, TextField, Typography, Container } from '@material-ui/core'\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport OnlineUsers from '../components/OnlineUsers'\nimport io from 'socket.io-client';\nimport Imessenger from '../components/InstantMessenger';\nimport UploadedFiles from '../components/UploadedFilesList'\n\nconst useStyles = makeStyles((theme) => ({\n    main:{\n        backgroundColor:'#120B29',\n        height:'100vh',\n        padding:'20px'\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    messenger:{\n        height:'100%'\n    }\n}));\n\nlet socket;\nexport default function ChatView(props) {\n    const [name, setName] = useState('')\n    const [room, setRoom] = useState('')\n    const [onlineUsers, setOnlineUsers] = useState([])\n    // const [socket] = useState(() => io(':8000'));\n    \n    const [messages, setMessages] = useState([])\n    const [message, setMessage] = useState('');\n    const ENDPOINT = 'localhost:8000'\n\n    // socket.on(\"connect\", () => {\n    //     console.log(socket.connected); // true\n    //     socket.emit('user', {userName:'moe'})\n    // });\n    \n    useEffect(() => {  \n        const {name, room} =props\n        setName(name);\n        setRoom(room)\n\n        socket = io(ENDPOINT);\n\n        socket.emit('join', {name:name, room:room}, (error)=>{\n            \n            if(error){\n                console.log(error)\n                navigate('/')\n            }\n        })\n\n        // socket.on('onlineUsers', (data)=>{\n        //     setOnlineUsers(users=> [...users, data])\n        // })\n        // // sessionStorage.setItem('myData', 'name')\n        // socket.on(\"new user has joined\", ()=>{\n        //     setMessages(msgs=>[...msgs,'new user popped in'])\n        // })\n        // socket.on('updated messages', data => setMessages(msgs=>[...msgs,data]));\n        return () => socket.disconnect(true);\n    }, []);\n    \n    useEffect(() => {\n        socket.on('message', (message)=>{\n            setMessages((msgs)=>[...msgs, message])\n        })\n\n        socket.on('roomData', (roomData)=>{\n            setOnlineUsers(roomData.users)\n        })\n\n        return () => socket.disconnect(true);\n    }, []);\n    \n    // sessionStorage.setItem('myData', 'name')\n    const sendMessage = (e) => {\n        console.log('message sent')\n        e.preventDefault();\n        if(message){\n            socket.emit('sendMessage', message, ()=> setMessage(''))\n        }\n    }\n\n    \n    console.log(message, messages)\n\n    const classes = useStyles();\n    return (\n        <Grid container \n            direction=\"row\"\n            justify=\"flex-start\"\n            alignItems=\"center\"\n            spacing={2}\n            className={classes.main}\n        >\n            <Grid item xs={2}>\n                <UploadedFiles files={[1,2,3,4,5,6,7]} />\n            </Grid>\n            <Grid item xs={8}  >\n                <Imessenger \n                    messages={messages} \n                    message={message} \n                    setMessage={setMessage} \n                    sendMessage={sendMessage}\n                />\n            </Grid>\n            <Grid item xs={2}>\n                <OnlineUsers users={onlineUsers} />\n            </Grid>\n        </Grid>\n    );\n    }","import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport { Router, Link, navigate } from '@reach/router';\nimport axios from 'axios';\nimport IndexView from './views/IndexView';\nimport CreateView from './views/CreateView';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Login from './views/LoginView'\nimport TestView from './views/TestView'\nimport EditView from './views/EditView'\nimport Menu from './components/Menu'\nimport Drawer from './components/Drawer'\nimport ProfileView from './views/ProfileView';\nimport ChatView from './views/ChatView';\n\n// axios.interceptors.response.use(response => response, \n//   ()=>navigate('/login'))\n\nfunction App() {\n  const[projects, setProjects]=useState([]);\n  const[reset, setReset]=useState(false);\n  const[user, setUser]= useState({\n    _id:'',\n    firstName:'',\n    lastName:'',\n    userName:'',\n    email:'',\n  });\n\n  useEffect(()=>{\n    axios.get('http://localhost:8000/api/projects', {withCredentials:true})\n    .then((response)=>{\n        setProjects(response.data)\n        setUser(JSON.parse(sessionStorage.getItem('user')))\n    })\n    .catch(err=>{\n        console.log(err);\n        if(err.response.data.message==\"Unauthorized\"){\n          navigate('/login')\n      }\n    })\n},[reset])\n\n  return (\n    <div className=\"App\">\n        <Router>\n          <Login setUser={setUser} setReset={setReset} path=\"/login\"/>\n            <Menu path=\"/\">\n              <IndexView projects={projects} setReset={setReset} path=\"/\" />\n              <CreateView setReset={setReset} path=\"/create\" />\n              <EditView setReset={setReset} path=\"/edit/:id\" />\n              <ProfileView user={user} setUser={setUser} setReset={setReset} path=\"/profile\"/>\n              <TestView path=\"/test\" />\n              <ChatView path=\"/chat/:name/channel/:room\"/>\n            </Menu>\n        </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}