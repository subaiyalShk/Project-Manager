{"version":3,"sources":["components/Statusbtn.js","components/PostStatus.js","components/StatusLogs.js","components/ProjectCard.js","components/ProjectsList.js","components/Logout.js","views/IndexView.js","views/CreateView.js","views/LoginView.js","views/TestView.js","views/EditView.js","components/Menu.js","components/Drawer.js","App.js","serviceWorker.js","index.js"],"names":["StatusButton","props","setReset","project","nextStatus","nextStat","status","update","Object","objectSpread","_useState","useState","_useState2","slicedToArray","projectObj","classes","makeStyles","theme","button","margin","spacing","width","backgroundColor","color","useStyles","react_default","a","createElement","Button","variant","onClick","e","Axios","put","_id","withCredentials","then","response","console","log","reset","catch","err","className","newStat","root","& > *","alignItems","StatusLogs","maxWidth","palette","background","paper","inline","display","logs","List","map","Fragment","ListItem","key","name","ListItemAvatar","Avatar","alt","src","ListItemText","primary","secondary","Typography","component","date","message","Divider","noValidate","autoComplete","TextField","id","label","IconButton","style","aria-label","event","Send_default","ProjectCard","expanded","setExpanded","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","red","cardHeader","paddingLeft","cardDescription","paddingBottom","Card","CardHeader","title","subheader","updatedAt","action","MoreVert_default","url","navigate","CardContent","lead","startDate","deadline","description","CardActions","disableSpacing","Statusbtn","clsx","defineProperty","aria-expanded","ExpandMore_default","Collapse","in","timeout","unmountOnExit","paragraph","components_StatusLogs","statusLogs","ProjectList","flexWrap","justifyContent","overflow","gridList","header","icon","GridList","cellHeight","GridListTile","cols","ListSubheader","projects","rows","margin-bottom","components_ProjectCard","LogoutButton","axios","delete","flexGrow","min-height","padding","textAlign","text","heading","IndexView","Grid","container","item","xs","md","ProjectsList","filter","CreateView","setError","_useState3","_useState4","setProject","onChangeHandler","target","value","main","marginTop","borderRadius","flexDirection","form","submit","card","Container","CssBaseline","AddToPhotos_default","onSubmit","preventDefault","post","data","errmsg","sm","required","fullWidth","autoFocus","onChange","type","InputLabelProps","shrink","multiline","image","backgroundImage","backgroundRepeat","grey","backgroundSize","backgroundPosition","Login","firstName","setFname","lastName","setLname","_useState5","_useState6","email","setEmail","_useState7","_useState8","password","setPassword","_useState9","_useState10","confirmPassword","setPasswordConf","_useState11","_useState12","setErr","_useState13","_useState14","toggle","setToggle","Paper","elevation","square","Link","href","Box","mt","TestView","setProjects","useEffect","get","EditView","save","appBar","easing","sharp","leavingScreen","appBarShift","concat","easeOut","enteringScreen","menuButton","marginRight","hide","drawer","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","content","minHeight","contentShift","DrawerMenu","useTheme","_React$useState","React","_React$useState2","open","setOpen","AppBar","position","Toolbar","edge","Menu_default","noWrap","Drawer","anchor","direction","ChevronLeft_default","ChevronRight_default","ListItemIcon","Dashboard_default","es","to","AddBox_default","ExitToApp_default","children","list","fullList","App","path","components_Menu","views_IndexView","views_CreateView","views_EditView","views_TestView","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.a37990dc.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport Axios from 'axios';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Icon from '@material-ui/core/Icon';\n\n\n\nconst StatusButton = props => {\n    const {setReset} = props;\n    const project = props.project\n    const nextStatus = props.nextStat.status\n    let update = {\n        ...project,\n        'status':nextStatus\n        \n    }\n    const [projectObj, setProjectObj] = useState(update)\n    const useStyles = makeStyles((theme) => ({\n        button: {\n            margin: theme.spacing(1),\n            width: '190px',\n            backgroundColor:props.nextStat.color\n        },\n    }));\n    const classes = useStyles();  \n\n    const onClickHandler = e => {\n        Axios.put(\"http://localhost:8000/api/project/\" + project._id, projectObj, {withCredentials:true})\n        .then(response => {\n            console.log(response);\n            setReset((reset)=>{return(!reset)})\n        })\n        .catch(err => {\n            console.log(err);\n        })\n    }\n    \n    return (\n        <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={onClickHandler}\n            className={classes.button}\n        >{props.nextStat.newStat}</Button>\n    )\n}\n\nexport default StatusButton;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {TextField, IconButton} from '@material-ui/core';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& > *': {\r\n        margin: theme.spacing(1),\r\n        width: '25ch',\r\n        alignItems:\"flex-start\"\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function PostStatus() {\r\n    const classes = useStyles();\r\n    const handleClick = event => {\r\n    \r\n    }\r\n\r\nreturn (\r\n    <form className={classes.root} noValidate autoComplete=\"off\">\r\n        <ListItemAvatar>\r\n            <Avatar alt=\"Cindy Baker\" src=\"/static/images/avatar/3.jpg\" />\r\n            </ListItemAvatar>\r\n        <TextField \r\n            id=\"standard-basic\" \r\n            label=\"Post Status\" \r\n        />\r\n        <IconButton \r\n            style={{width:'50px'}}\r\n            aria-label=\"send\"\r\n            onClick={handleClick}\r\n        >\r\n            <SendIcon />\r\n        </IconButton >\r\n    </form>\r\n    );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport {List, TextField, Divider, IconButton, Avatar, ListItemAvatar, Typography, ListItemText} from '@material-ui/core';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport PostStatus from '../components/PostStatus';\r\n\r\n\r\nconst StatusLogs = (props) => {\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            width: '100%',\r\n            maxWidth: '36ch',\r\n            backgroundColor: theme.palette.background.paper,\r\n        },\r\n        inline: {\r\n            display: 'inline',\r\n        },\r\n        }));\r\n    const classes = useStyles();\r\n    const logs = props.logs\r\n    const handleClick = event => {\r\n    \r\n    }\r\n\r\n    return (\r\n        <List className={classes.root}>\r\n        {logs.map((log) => (\r\n            <>\r\n                <ListItem key={log.name} alignItems=\"flex-start\">\r\n                    <ListItemAvatar>\r\n                    <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" />\r\n                    </ListItemAvatar>\r\n                    <ListItemText\r\n                    primary={log.name}\r\n                    secondary={\r\n                        <React.Fragment>\r\n                        <Typography\r\n                            component=\"span\"\r\n                            variant=\"body2\"\r\n                            className={classes.inline}\r\n                            color=\"textPrimary\"\r\n                        >\r\n                            {log.date}\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                            {log.message}\r\n                        </Typography>\r\n                        </React.Fragment>\r\n                    }\r\n                    />\r\n                </ListItem>\r\n                <Divider variant=\"inset\" component=\"li\" />\r\n            </>\r\n        ))}\r\n        <form noValidate  autoComplete=\"off\">\r\n            <ListItem alignItems=\"flex-start\">\r\n                <ListItemAvatar >\r\n                    <Avatar alt=\"Cindy Baker\" src=\"/static/images/avatar/3.jpg\" />\r\n                </ListItemAvatar>\r\n                <TextField \r\n                    id=\"standard-basic\" \r\n                    label=\"Post Status\" \r\n                />\r\n                <IconButton \r\n                    style={{width:'50px'}}\r\n                    aria-label=\"send\"\r\n                    onClick={handleClick}\r\n                >\r\n                    <SendIcon />\r\n                </IconButton >\r\n            </ListItem>\r\n        </form>\r\n        </List>\r\n    );\r\n}\r\n\r\nexport default StatusLogs;","import React, {useState, useEffect} from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Card, CardHeader, CardContent, CardActions, Collapse, Avatar, IconButton, Typography} from '@material-ui/core';\r\nimport { red } from '@material-ui/core/colors';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport StatusBtn from '../components/Statusbtn';\r\nimport StatusLogs from '../components/StatusLogs';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport {navigate} from '@reach/router';\r\n\r\nconst ProjectCard = props => {\r\n    const {setReset}= props;\r\n    const [expanded, setExpanded] = useState(false);\r\n    const project = props.project\r\n\r\n    const nextStat = (status) => {\r\n        if(status=='1'){\r\n            return({\r\n                color:'#FFBA00',\r\n                status:'2',\r\n                newStat:'Start'\r\n            })\r\n        }\r\n        else if(status=='2'){\r\n            return({\r\n                color:'#0000FF',\r\n                status:'3',\r\n                newStat:'Review'\r\n            })\r\n        }\r\n        else if(status=='3'){\r\n            return({\r\n                color:'#008000',\r\n                status:'4',\r\n                newStat:'Complete'\r\n            })\r\n        }\r\n        else if(status=='4'){\r\n            return({\r\n                color:'gray',\r\n                status:'4',\r\n                newStat:'Done'\r\n            })\r\n        }\r\n    }\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            maxWidth: '100%',\r\n        },\r\n        media: {\r\n            height: 0,\r\n            paddingTop: '56.25%', // 16:9\r\n        },\r\n        expand: {\r\n            transform: 'rotate(0deg)',\r\n            marginLeft: 'auto',\r\n            transition: theme.transitions.create('transform', {\r\n            duration: theme.transitions.duration.shortest,\r\n            }),\r\n        },\r\n        expandOpen: {\r\n            transform: 'rotate(180deg)',\r\n        },\r\n        avatar: {\r\n            backgroundColor: red[500],\r\n        },\r\n        cardHeader:{\r\n            paddingLeft:'32px'\r\n        },\r\n        cardDescription:{\r\n            paddingLeft:'32px',\r\n            paddingTop:'0px',\r\n            paddingBottom:'0px'\r\n        }\r\n        }));\r\n\r\n    const classes = useStyles();\r\n    const handleExpandClick = () => {\r\n        setExpanded(!expanded);\r\n    };\r\n    \r\n    return(\r\n        <Card className={classes.root}>\r\n        <CardHeader\r\n            className={classes.cardHeader}\r\n            alignItems=\"flex-start\"\r\n            avatar={\r\n            <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n                R\r\n            </Avatar>\r\n            }\r\n            title={project.name}\r\n            subheader= {\"Updated : \" + project.updatedAt}\r\n            action={\r\n                <IconButton aria-label=\"settings\">\r\n                    <MoreVertIcon onClick={()=>{ let url= 'edit/'+project._id; return(navigate(url))}}/>\r\n                </IconButton>\r\n            }\r\n        />\r\n        <CardContent className={classes.cardDescription}>\r\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                Project Lead : {project.lead}\r\n            </Typography>\r\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                Start Date : {project.startDate}\r\n            </Typography>\r\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                Deadline : {project.deadline}\r\n            </Typography>\r\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                {project.description} \r\n            </Typography>\r\n        </CardContent>\r\n        <CardActions disableSpacing>\r\n            <StatusBtn\r\n                nextStat={nextStat(project.status)}\r\n                project={project}\r\n                setReset={setReset}\r\n            />\r\n            <IconButton\r\n            className={clsx(classes.expand, {\r\n                [classes.expandOpen]: expanded,\r\n            })}\r\n            onClick={handleExpandClick}\r\n            aria-expanded={expanded}\r\n            aria-label=\"show more\"\r\n            >\r\n            <ExpandMoreIcon />\r\n            </IconButton>\r\n        </CardActions>\r\n        <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n            <CardContent>\r\n            <Typography style={{paddingLeft:'18px'}} paragraph>Status Logs:</Typography>\r\n                <StatusLogs \r\n                    logs={project.statusLogs}\r\n                />\r\n            </CardContent>\r\n        </Collapse>\r\n        </Card>\r\n    )\r\n}\r\nexport default ProjectCard;","import React, {useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport ProjectCard from '../components/ProjectCard';\r\n\r\n\r\n\r\n\r\nconst ProjectList = props => {\r\n    const {setReset}=props;\r\n    const[status, setStatus]=useState('loading');\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            display: 'flex',\r\n            flexWrap: 'wrap',\r\n            justifyContent: 'space-around',\r\n            overflow: 'hidden',\r\n            backgroundColor: theme.palette.background.paper,\r\n        },\r\n        gridList: {\r\n            width: '100%',\r\n            backgroundColor:'black'\r\n        },\r\n    \r\n        header: {\r\n            backgroundColor: props.color,\r\n            color:'white'\r\n        },\r\n    \r\n        icon: {\r\n            color: 'rgba(255, 255, 255, 0.54)',\r\n        },\r\n    }));\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.root}>\r\n        <GridList cellHeight={'auto'} spacing={4} className={classes.gridList}>\r\n            <GridListTile key=\"Subheader\" cols={2} style={{ height: '80px' }}>\r\n                <ListSubheader className={classes.header} component=\"div\">{props.status}</ListSubheader>\r\n            </GridListTile>\r\n            {props.projects.map((project) => (\r\n            <GridListTile key={project.status} cols={2} rows={1.5} style={{'margin-bottom':'30px'}}>\r\n                <ProjectCard project={project} setReset={setReset}/>\r\n            </GridListTile>\r\n            ))}\r\n        </GridList>\r\n        </div>\r\n    );\r\n    }\r\n\r\n    export default ProjectList;","import React from 'react'\nimport axios from 'axios'\nimport {navigate} from '@reach/router';\n\nexport default function LogoutButton(){\n    function handleClick(){\n        axios.delete('http://localhost:8000/api/users/logout', { withCredentials: true})\n        .then(()=>navigate('/login'))\n    }\n    return(\n        <button onClick={handleClick}>Log Out</button>\n    )\n}\n","import React, {useState, useEffect, Component} from 'react';\nimport {Link} from '@reach/router';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {Paper, Grid} from '@material-ui/core';\n\nimport ProjectCard from '../components/ProjectCard';\nimport ProjectsList from '../components/ProjectsList';\nimport StatusBtn from '../components/Statusbtn';\nimport Logoutbtn from '../components/Logout';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        backgroundColor : 'black',\n        'min-height':'90vh',\n        padding:'40px'\n        },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n        },\n    heading: {\n        color: 'white'\n    }\n}));\n\nconst IndexView = props => {\n    const classes = useStyles();\n    const {setReset, projects}= props;\n\n    return(\n        <div className={classes.root}>\n        <Grid container spacing={3} >\n            <Grid item xs={12} md={3}>\n                <ProjectsList\n                    setReset={setReset} \n                    status={'Backlog'} \n                    color={'red'} \n                    projects={projects.filter(project => project.status=='1')}\n                />\n            </Grid>\n            <Grid item xs={12} md={3}>\n                <ProjectsList\n                    setReset={setReset} \n                    status={'In Progress'} \n                    color={'#FFBA00'}\n                    projects={projects.filter(project => project.status=='2')}\n                />\n            </Grid>\n            <Grid item xs={12} md={3}>\n                <ProjectsList\n                    setReset={setReset} \n                    status={'In Review'} \n                    color={'blue'}\n                    projects={projects.filter(project => project.status=='3')}\n                />\n            </Grid>\n            <Grid item xs={12} md={3}>\n                <ProjectsList \n                    setReset={setReset}\n                    status={'Completed'} \n                    color={'green'}\n                    projects={projects.filter(project => project.status=='4')}\n                />\n            </Grid>\n        </Grid>\n        </div>\n    )\n}\n\nexport default IndexView;","import React, {useState} from 'react';\nimport axios from 'axios';\nimport {navigate} from '@reach/router';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport AddToPhotosIcon from '@material-ui/icons/AddToPhotos';\nimport Grid from '@material-ui/core/Grid';\n\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\n\nconst CreateView = props => {\n    const {setReset}=props;\n    const [error, setError] = useState(\"\");\n    const [project, setProject] = useState(\n        {\n            \"name\": \"\",\n            \"lead\": \"\",\n            \"startDate\":\"\",\n            \"deadline\":\"\",\n            \"description\":\"\",\n            \"status\":\"1\"\n        }\n    )\n    const onChangeHandler = (e) => {\n        setProject({\n            ...project,\n            [e.target.name]:e.target.value\n        \n        })\n    }\n\n\n    const onSubmitHandler = (e) =>{\n        e.preventDefault();\n        axios.post(\"http://localhost:8000/api/project\", project)\n        .then(response=>{\n            navigate('/');\n            setReset((reset)=>{return(!reset)});\n            console.log(response.data)\n        })\n        .catch(err =>{\n            console.log(err);\n            setError(err.response.data.errmsg);\n        })\n    }\n    const useStyles = makeStyles((theme) => ({\n        main:{\n            backgroundColor:'white',\n            marginTop:'50px',\n            padding:'0px',\n            borderRadius:'50px'\n        },\n        paper: {\n            marginTop: theme.spacing(8),\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n        },\n        avatar: {\n            margin: theme.spacing(1),\n            backgroundColor: theme.palette.secondary.main,\n        },\n        form: {\n            width: '100%', // Fix IE 11 issue.\n            marginTop: theme.spacing(3),\n        },\n        submit: {\n            margin: theme.spacing(3, 0, 2),\n            backgroundColor:'red',\n            color:'white'\n        },\n        card:{\n            width:'100%'\n        }\n    }));\n    const classes = useStyles();\n\n    return (\n        <Container className={classes.main} component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Card\n            className={classes.card}\n        >\n        <CardHeader\n            avatar={\n                <AddToPhotosIcon/>\n            }\n            title={\n                <Typography component=\"h1\" variant=\"h5\">\n                    Create a new project\n                </Typography>\n                }\n        >\n        </CardHeader>\n        <CardContent>\n            <form className={classes.form} noValidate onSubmit={onSubmitHandler}>\n                <Grid container spacing={2}>\n                <Grid item xs={12} sm={12}>\n                    <TextField\n                    name=\"name\"\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    label=\"Project Name\"\n                    autoFocus\n                    onChange={onChangeHandler}\n                    />\n                </Grid>\n                <Grid item xs={12} sm={8}>\n                    <TextField\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    label=\"Project Lead\"\n                    name=\"lead\"\n                    onChange={onChangeHandler}\n                    />\n                </Grid>\n                <Grid item xs={6}>\n                    <TextField\n                    label=\"Start Date\"\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    name=\"startDate\"\n                    type=\"date\"\n                    onChange={onChangeHandler}\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                    />\n                </Grid>\n                <Grid item xs={6}>\n                    <TextField\n                    label=\"Set a deadline\"\n                    name=\"deadline\"\n                    variant=\"outlined\"\n                    type=\"date\"\n                    required\n                    fullWidth\n                    onChange={onChangeHandler}\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                <TextField\n                    label=\"Project Description\"\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    multiline\n                    rows={5}\n                    name=\"description\"\n                    onChange={onChangeHandler}\n                    />\n                </Grid>\n                </Grid>\n                <Button\n                    type=\"submit\"\n                    fullWidth\n                    variant=\"contained\"\n                    className={classes.submit}\n                >\n                Add Project\n                </Button>\n            </form>\n        </CardContent>\n        </Card>\n    </Container>\n    );\n}\n\nexport default CreateView;\n\n{/* <div>\n                            <TextField required id=\"standard-required\" onChange={e=>{setName(e.target.value)}} label=\" Project Name\" />\n                        </div>\n                        <div>\n                            <TextField required id=\"standard-required\" onChange={e=>{setLead(e.target.value)}} label=\"Project Lead\" />\n                        </div>\n                        <div>\n                            <TextField required id=\"standard-required\" onChange={e=>{setStartDate(e.target.value)}} label=\"Start Date\" />\n                        </div>\n                        <div>\n                            <TextField required id=\"standard-required\" onChange={e=>{setDeadline(e.target.value)}} label=\"Deadline\" />\n                        </div>\n                        <div>\n                            <TextField required id=\"standard-required\" onChange={e=>{setDescription(e.target.value)}} label=\"Description\" /> */}","import React, {useState} from 'react';\nimport axios from 'axios';\nimport { navigate } from '@reach/router';\nimport RegistrationForm from '../components/RegistrationForm';\nimport {Box, TextField, Button, Paper, Grid, Link, Checkbox, FormControlLabel, CssBaseline, Avatar, Typography} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      height: '100vh',\n    },\n    image: {\n      backgroundImage: 'url(https://source.unsplash.com/Zsqbptb_j-Y)',\n      backgroundRepeat: 'no-repeat',\n      backgroundColor:\n        theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\n      backgroundSize: 'cover',\n      backgroundPosition: 'center',\n    },\n    paper: {\n      margin: theme.spacing(8, 4),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n    },\n    avatar: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n      width: '100%', // Fix IE 11 issue.\n      marginTop: theme.spacing(1),\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2),\n    },\n  }));\n\n\nexport default function Login(props){\n    const [firstName, setFname]=useState(\"\");\n    const [lastName, setLname]=useState(\"\");\n    const [email, setEmail]=useState(\"\");\n    const [password, setPassword]= useState(\"\");\n    const [confirmPassword, setPasswordConf]= useState(\"\");\n    const {setReset} = props;\n\n    const [err, setErr] = useState('');\n    const [toggle, setToggle]=useState(true);\n    \n    function handleLogin(event){\n        event.preventDefault();\n        setErr('');\n        axios.post('http://localhost:8000/api/users/login', {\n            email,\n            password\n        }, { withCredentials:true })\n        .then((response)=>{\n          console.log(response)\n          setReset((reset)=>{return(!reset)})\n          navigate('/')\n        })\n        .catch(()=>setErr('Please check your credentials !'));\n    }\n\n  function handleRegister(event){\n    event.preventDefault();\n    axios.post('http://localhost:8000/api/users', {\n      email, \n      password, \n      confirmPassword, \n      firstName, \n      lastName\n    }, {withCredentials:true})\n    .then((response)=>{\n      console.log(response)\n      setReset((reset)=>{return(!reset)})\n      navigate('/')\n    })\n    .catch(err => {\n        console.log(err)\n        setErr(err)\n    }); \n  }\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <Grid container component=\"main\" className={classes.root}>\n            <CssBaseline />\n            <Grid item xs={false} sm={4} md={7} className={classes.image} />\n            <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n                <div className={classes.paper}>\n                <Typography component=\"h1\" variant=\"h5\">\n                    {toggle?\"Sign in\":\"Register\"}\n                </Typography>\n                {\n                    err && (\n                        <p style={{color:'red'}}>{err}</p>\n                    )\n                }\n                {\n                  toggle?\n                    <form onSubmit={handleLogin} className={classes.form} noValidate>\n                      <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                          Use the following credentials for demo : \n                      </Typography>\n                      <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                          email: subi@gmail.com\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                          password: 1234567890 \n                      </Typography>\n                      <TextField\n                          variant=\"outlined\"\n                          margin=\"normal\"\n                          required\n                          fullWidth\n                          id=\"email\"\n                          label=\"Email Address\"\n                          name=\"email\"\n                          autoComplete=\"email\"\n                          autoFocus\n                          value={email}\n                          onChange={e => setEmail(e.target.value)}\n                      />\n                      <TextField\n                          variant=\"outlined\"\n                          margin=\"normal\"\n                          required\n                          fullWidth\n                          name=\"password\"\n                          label=\"Password\"\n                          type=\"password\"\n                          id=\"password\"\n                          autoComplete=\"current-password\"\n                          value={password}\n                          onChange={e => setPassword(e.target.value)}\n                      />\n                      <Button\n                          type=\"submit\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          className={classes.submit}\n                      >\n                      Sign In\n                      </Button>\n                      <Grid container>\n                      <Grid item xs>\n                          <Link href=\"#\" variant=\"body2\">\n                          Forgot password?\n                          </Link>\n                      </Grid>\n                      <Grid item>\n                          <Link onClick={(e)=>{e.preventDefault();setToggle((toggle)=>{return(!toggle)})}} href=\"#\" variant=\"body2\">\n                          {\"Don't have an account? Sign Up\"}\n                          </Link>\n                      </Grid>\n                      </Grid>\n                      <Box mt={5}>\n                      </Box>\n                  </form>:\n                  <form onSubmit={handleRegister} className={classes.form} noValidate>\n                    <Grid container>\n                      <Grid item xs={12}>\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"email\"\n                            label=\"First Name\"\n                            name=\"fname\"\n                            autoFocus\n                            value={firstName}\n                            onChange={e => setFname(e.target.value)}\n                        />\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            label=\"Last Name\"\n                            name=\"fname\"\n                            autoFocus\n                            value={lastName}\n                            onChange={e => setLname(e.target.value)}\n                        />\n                      </Grid>\n                    </Grid>\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"email\"\n                        label=\"Email Address\"\n                        name=\"email\"\n                        autoComplete=\"email\"\n                        autoFocus\n                        value={email}\n                        onChange={e => setEmail(e.target.value)}\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        name=\"password\"\n                        label=\"Password\"\n                        type=\"password\"\n                        id=\"password\"\n                        autoComplete=\"current-password\"\n                        value={password}\n                        onChange={e => setPassword(e.target.value)}\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        label=\"Confirm Password\"\n                        type=\"password\"\n                        value={confirmPassword}\n                        onChange={e => setPasswordConf(e.target.value)}\n                    />\n                  <Button\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                      color=\"primary\"\n                      className={classes.submit}\n                  >\n                  Send\n                  </Button>\n                  <Grid container>\n                  <Grid item xs>\n                      <Link href=\"#\" variant=\"body2\">\n                      Forgot password?\n                      </Link>\n                  </Grid>\n                  <Grid item>\n                      <Link onClick={(e)=>{e.preventDefault();setToggle((toggle)=>{return(!toggle)})}} href=\"#\" variant=\"body2\">\n                      {\"Login\"}\n                      </Link>\n                  </Grid>\n                  </Grid>\n                  <Box mt={5}>\n                  </Box>\n              </form>\n                }\n                </div>\n            </Grid>\n            </Grid>\n        </div>\n        );\n}\n\n","import React, {useState, useEffect, Component} from 'react';\nimport {Link} from '@reach/router';\nimport axios from 'axios';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {Paper, Grid} from '@material-ui/core';\n\nimport ProjectCard from '../components/ProjectCard';\nimport ProjectsList from '../components/ProjectsList';\nimport StatusBtn from '../components/Statusbtn';\nimport Logoutbtn from '../components/Logout';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        backgroundColor : 'black',\n        'min-height':'100vh',\n        padding:'40px'\n        },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n        },\n    heading: {\n        color: 'white'\n    }\n}));\n\nconst TestView = props => {\n    const[projects, setProjects]=useState([]);\n    const[reset, setReset]=useState(false)\n    const classes = useStyles();\n\n    useEffect(()=>{\n        axios.get('http://localhost:8000/api/projects')\n        .then((response)=>{\n            setProjects(response.data)\n        })\n        .catch(err=>{\n            console.log(err);\n        })\n    },[reset])\n\n    const sortByStatus = (status, projects) => {\n        return(\n            projects.filter(project => project.status==status)\n        )\n    }\n\n    return(\n        <div className={classes.root}>\n        <Grid container spacing={3} >\n            <Grid item xs={12} md={3}>\n                <ProjectsList \n                    status={'Backlog'} \n                    color={'red'} \n                    projects={projects.filter(project => project.status=='1')}\n                />\n            </Grid>\n            <Grid item xs={12} md={3}>\n                <ProjectsList \n                    status={'In Progress'} \n                    color={'#FFBA00'}\n                    projects={projects.filter(project => project.status=='2')}\n                />\n            </Grid>\n            <Grid item xs={12} md={3}>\n                <ProjectsList \n                    status={'In Review'} \n                    color={'blue'}\n                    projects={projects.filter(project => project.status=='3')}\n                />\n            </Grid>\n            <Grid item xs={12} md={3}>\n                <ProjectsList \n                    status={'Completed'} \n                    color={'green'}\n                    projects={projects.filter(project => project.status=='4')}\n                />\n            </Grid>\n        </Grid>\n        </div>\n    )\n}\n\nexport default TestView;","import React, {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport {navigate} from '@reach/router';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport AddToPhotosIcon from '@material-ui/icons/AddToPhotos';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\n\r\nconst EditView = props => {\r\n    const {setReset, id}=props;\r\n    const [error, setError] = useState(\"\");\r\n    const [project, setProject] = useState(\r\n        {\r\n            \"name\": \"\",\r\n            \"lead\": \"\",\r\n            \"startDate\":\"\",\r\n            \"deadline\":\"\",\r\n            \"description\":\"\",\r\n            \"status\":\"1\"\r\n        })\r\n\r\n        useEffect(()=>{\r\n            axios.get('http://localhost:8000/api/project/'+id)\r\n            .then((response)=>{\r\n                setProject(response.data)\r\n            })\r\n            .catch(err=>{\r\n                console.log(err);\r\n            })\r\n        },[])\r\n\r\n        const onChangeHandler = (e) => {\r\n        setProject({\r\n            ...project,\r\n            [e.target.name]:e.target.value\r\n        \r\n        })\r\n    }\r\n\r\n\r\n    const saveHandler = (e) =>{\r\n        e.preventDefault();\r\n        axios.put(\"http://localhost:8000/api/project/\"+id, project, {withCredentials:true})\r\n        .then(response=>{\r\n            navigate('/');\r\n            setReset((reset)=>{return(!reset)});\r\n            console.log(response.data)\r\n        })\r\n        .catch(err =>{\r\n            console.log(err);\r\n            if(err.response.data.message==\"Unauthorized\"){\r\n                navigate('/login')\r\n            }\r\n            setError(err.response.data.errmsg);\r\n        })\r\n    }\r\n\r\n    const deleteHandler = (e) =>{\r\n        e.preventDefault();\r\n        axios.delete(\"http://localhost:8000/api/project/\"+id, {withCredentials:true})\r\n        .then(response=>{\r\n            navigate('/');\r\n            setReset((reset)=>{return(!reset)});\r\n            console.log(response.data)\r\n        })\r\n        .catch(err =>{\r\n            console.log(err);\r\n            if(err.response.data.message==\"Unauthorized\"){\r\n                navigate('/login')\r\n            }\r\n            setError(err.response.data.errmsg);\r\n        })\r\n    }\r\n\r\n\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        main:{\r\n            backgroundColor:'white',\r\n            marginTop:'50px',\r\n            padding:'0px',\r\n            borderRadius:'50px'\r\n        },\r\n        paper: {\r\n            marginTop: theme.spacing(8),\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n        },\r\n        avatar: {\r\n            margin: theme.spacing(1),\r\n            backgroundColor: theme.palette.secondary.main,\r\n        },\r\n        form: {\r\n            width: '100%', // Fix IE 11 issue.\r\n            marginTop: theme.spacing(3),\r\n        },\r\n        save: {\r\n            margin: theme.spacing(3, 0, 2),\r\n        },\r\n        delete:{\r\n            margin: theme.spacing(3, 0, 2),\r\n            marginLeft:'15px',\r\n            backgroundColor:'red',\r\n            color:'white'\r\n        },\r\n        card:{\r\n            width:'100%',\r\n        }\r\n    }));\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Container className={classes.main} component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <Card\r\n            className={classes.card}\r\n        >\r\n        <CardHeader\r\n            avatar={\r\n                <AddToPhotosIcon/>\r\n            }\r\n            title={\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Edit Project\r\n                </Typography>\r\n                }\r\n        >\r\n        </CardHeader>\r\n        <CardContent>\r\n            <form className={classes.form} noValidate onSubmit={saveHandler}>\r\n                <Grid container spacing={2}>\r\n                <Grid item xs={12} sm={12}>\r\n                    <TextField\r\n                    name=\"name\"\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    label=\"Project Name\"\r\n                    autoFocus\r\n                    onChange={onChangeHandler}\r\n                    value={project.name}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={8}>\r\n                    <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    label=\"Project Lead\"\r\n                    name=\"lead\"\r\n                    onChange={onChangeHandler}\r\n                    value={project.lead}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <TextField\r\n                    label=\"Start Date\"\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"startDate\"\r\n                    type=\"date\"\r\n                    value={project.startDate}\r\n                    onChange={onChangeHandler}\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <TextField\r\n                    label=\"Set a deadline\"\r\n                    name=\"deadline\"\r\n                    variant=\"outlined\"\r\n                    type=\"date\"\r\n                    required\r\n                    fullWidth\r\n                    value={project.deadline}\r\n                    onChange={onChangeHandler}\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                <TextField\r\n                    label=\"Project Description\"\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    multiline\r\n                    rows={5}\r\n                    name=\"description\"\r\n                    value={project.description}\r\n                    onChange={onChangeHandler}\r\n                    />\r\n                </Grid>\r\n                </Grid>\r\n                <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    className={classes.save}\r\n                >\r\n                save\r\n                </Button>\r\n                <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    className={classes.delete}\r\n                    onClick={deleteHandler}\r\n                >\r\n                Delete\r\n                </Button>\r\n            </form>\r\n        </CardContent>\r\n        </Card>\r\n    </Container>\r\n    );\r\n}\r\n\r\nexport default EditView;","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport AddBoxIcon from '@material-ui/icons/AddBox';\r\nimport Logout from './Logout'\r\n\r\nimport {Link} from '@reach/router'\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBar: {\r\n        backgroundColor:'black',\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n        easing: theme.transitions.easing.easeOut,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-end',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        transition: theme.transitions.create('margin', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        marginLeft: -drawerWidth,\r\n        backgroundColor:'black',\r\n        minHeight:'100vh'\r\n    },\r\n    contentShift: {\r\n        transition: theme.transitions.create('margin', {\r\n        easing: theme.transitions.easing.easeOut,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginLeft: 0,\r\n    },\r\n}));\r\n\r\nconst DrawerMenu = (props) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n    return (\r\n        <div className={classes.root}>\r\n        <CssBaseline />\r\n        <AppBar\r\n            position=\"fixed\"\r\n            className={clsx(classes.appBar, {\r\n            [classes.appBarShift]: open,\r\n            })}\r\n        >\r\n            <Toolbar>\r\n            <IconButton\r\n                color=\"inherit\"\r\n                aria-label=\"open drawer\"\r\n                onClick={handleDrawerOpen}\r\n                edge=\"start\"\r\n                className={clsx(classes.menuButton, open && classes.hide)}\r\n            >\r\n                <MenuIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" noWrap>\r\n                Project Wrapdrive\r\n            </Typography>\r\n            </Toolbar>\r\n        </AppBar>\r\n        <Drawer\r\n            className={classes.drawer}\r\n            variant=\"persistent\"\r\n            anchor=\"left\"\r\n            open={open}\r\n            classes={{\r\n            paper: classes.drawerPaper,\r\n            }}\r\n        >\r\n            <div className={classes.drawerHeader}>\r\n            <IconButton onClick={handleDrawerClose}>\r\n                {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n            </IconButton>\r\n            </div>\r\n            <Divider />\r\n            <List>\r\n                <ListItem button >\r\n                <ListItemIcon><DashboardIcon/></ListItemIcon>\r\n                    <Link to={'/'}>\r\n                        <ListItemText primary={'Board'} />\r\n                    </Link>\r\n                </ListItem>\r\n                <ListItem button >\r\n                <ListItemIcon><AddBoxIcon/></ListItemIcon>\r\n                    <Link to={'/create'}>\r\n                        <ListItemText primary={'Create'} />\r\n                    </Link>\r\n                </ListItem>\r\n            </List>\r\n            <Divider />\r\n            <List>\r\n                <ListItem button>\r\n                <ListItemIcon><ExitToAppIcon/></ListItemIcon>\r\n                <Logout/>\r\n                </ListItem>\r\n            </List>\r\n        </Drawer>\r\n        <main\r\n            className={clsx(classes.content, {\r\n                [classes.contentShift]: open,\r\n            })}\r\n        >\r\n            <div className={classes.drawerHeader} />\r\n            {props.children}\r\n        </main>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DrawerMenu;","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\n\r\nconst useStyles = makeStyles({\r\n  list: {\r\n    width: 250,\r\n  },\r\n  fullList: {\r\n    width: 'auto',\r\n  },\r\n});\r\n\r\nexport default function TemporaryDrawer() {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({\r\n    top: false,\r\n    left: false,\r\n    bottom: false,\r\n    right: false,\r\n  });\r\n\r\n  const toggleDrawer = (anchor, open) => (event) => {\r\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n      return;\r\n    }\r\n\r\n    setState({ ...state, [anchor]: open });\r\n  };\r\n\r\n  const list = (anchor) => (\r\n    <div\r\n      className={clsx(classes.list, {\r\n        [classes.fullList]: anchor === 'top' || anchor === 'bottom',\r\n      })}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer(anchor, false)}\r\n      onKeyDown={toggleDrawer(anchor, false)}\r\n    >\r\n      <List>\r\n        {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n      <Divider />\r\n      <List>\r\n        {['All mail', 'Trash', 'Spam'].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n        <React.Fragment>\r\n          <Button onClick={toggleDrawer('left', true)}>click</Button>\r\n          <Drawer anchor={'left'} open={state['left']} onClose={toggleDrawer('left', false)}>\r\n            1\r\n            2\r\n            3\r\n            4\r\n            5\r\n            6\r\n          </Drawer>\r\n        </React.Fragment>\r\n      ))}\r\n    </div>\r\n  );\r\n}","import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport { Router, Link, navigate } from '@reach/router';\nimport axios from 'axios';\nimport IndexView from './views/IndexView';\nimport CreateView from './views/CreateView';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Login from './views/LoginView'\nimport TestView from './views/TestView'\nimport EditView from './views/EditView'\nimport Menu from './components/Menu'\nimport Drawer from './components/Drawer'\n\n// axios.interceptors.response.use(response => response, \n//   ()=>navigate('/login'))\n\nfunction App() {\n  const[projects, setProjects]=useState([]);\n  const[reset, setReset]=useState(false)\n\n  useEffect(()=>{\n    axios.get('http://localhost:8000/api/projects', {withCredentials:true})\n    .then((response)=>{\n        setProjects(response.data)\n    })\n    .catch(err=>{\n        console.log(err);\n        if(err.response.data.message==\"Unauthorized\"){\n          navigate('/login')\n      }\n    })\n},[reset])\n\n  return (\n    <div className=\"App\">\n        <Router>\n          <Login setReset={setReset} path=\"/login\"/>\n            <Menu path=\"/\">\n              <IndexView projects={projects} setReset={setReset} path=\"/\" />\n              <CreateView setReset={setReset} path=\"/create\" />\n              <EditView setReset={setReset} path=\"/edit/:id\" />\n              <TestView path=\"/test\" />\n            </Menu>\n        </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}